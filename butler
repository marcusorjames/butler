#!/bin/bash
# A dev stack builder, Install and manage your dev stack.
# Manage multiple PHP versions, automatically serve any folder

package="butler"
DIR="$(dirname "$(readlink -f "$0")")"
COMMON=$DIR/bin/common
. $COMMON/setup.sh
. $COMMON/colours.sh
CURRENT_PROJ="$(basename $PWD)"

# PATH any common binarys
export PATH="$PATH:$DIR/bin/common"

print_usage()
{
  echo "butler version 0.1.0 - your friendly dev stack helper"
  echo " "
  echo "SYNOPSIS:"
  echo " "
  echo "$package COMMAND ..."
  echo " "
  echo -e "${Blue}Commands: "
  echo " "
  echo -e "${Yellow}System:"
  echo -e ""
  echo -e "${Green}install    ${Color_Off}Install butler"
  echo -e ""
  echo -e "${Yellow}Site Management:"
  echo -e ""
  echo -e "${Green}site add   ${Color_Off}Add a new site"
  echo -e "${Green}site cd   ${Color_Off}Change Directory to site"
  echo -e "${Green}site status   ${Color_Off}Show status of site(s)"
  echo -e "${Green}site link   ${Color_Off}Link site(s)"
  echo -e ""
  echo -e "${Yellow}docker-compose Commands"
  echo -e ""
  echo -e "${Green}up        ${Color_Off}Create and start container stack"
  echo -e "${Green}down      ${Color_Off}Stop container stack"
  echo -e "${Green}restart   ${Color_Off}Restart container stack"
  echo -e "${Green}exec      ${Color_Off}Execute command on container"
  echo -e "${Green}exect     ${Color_Off}Execute command on container TTY"
  echo -e "${Green}proxy     ${Color_Off}Proxy site through ngrok"
  echo -e "${Green}run       ${Color_Off}Run a custom script"
  echo -e "${Green}shell     ${Color_Off}Start a shell session within the application container"
}

setup

[ ! "$#" -gt 0 ] && print_usage && exit 1

function="$1"
shift

case $function in
    'install') . $DIR/bin/install "$@" ;;
    'site') . $DIR/bin/site "$@" ;;
    'up') . $DIR/bin/docker-compose up "$@" ;;
    'down') . $DIR/bin/docker-compose down "$@" ;;
    'restart') . $DIR/bin/docker-compose restart "$@" ;;
    'exec') . $DIR/bin/docker-compose "exec php" "$CURRENT_PROJ" "$@" ;;
    'exect') . $DIR/bin/docker-compose "exec -T php" "$CURRENT_PROJ" "$@" ;;
    'proxy') . $DIR/bin/proxy "$CURRENT_PROJ" "$@" ;;
    'run') . $DIR/bin/run "$@" ;;
    'shell') . $DIR/bin/docker-compose "exec php bash" "$CURRENT_PROJ" "$@" ;;
    *) print_usage ; exit 1;;
esac
