#!/bin/bash
# A dev stack builder, Install and manage your dev stack.
# Manage multiple PHP versions, automatically serve any folder

package="butler"
DIR="$(dirname "$(readlink -f "$0")")"
COMMON=$DIR/bin/common
. $COMMON/colours.sh
CURRENT_PROJ="$(basename $PWD)"

# PATH any common binarys
export PATH="$PATH:$DIR/bin/common"

setup()
{
  if [ -f "$DIR/.env" ]; then
    export $(cat "$DIR/.env" | xargs)
    # SITES_DIR
  else
    echo "No .env file found" && exit 0;
  fi

  # TODO: Dry the directroy env santisation up
  # TODO: .env validation e.g. does SITES_DIR have a value

  # Strip trailing slash
  SITES_DIR=${SITES_DIR%/}
  # Replace ~
  SITES_DIR="${SITES_DIR/\~/$HOME}"

  # Ensure sites directory exists
  mkdir -p $SITES_DIR

  # Strip trailing slash
  PROJECTS_DIR=${PROJECTS_DIR%/}
  # Replace ~
  PROJECTS_DIR="${PROJECTS_DIR/\~/$HOME}"

  CURRENT_SITE_DIR="${SITES_DIR}/${CURRENT_PROJ}"
  CURRENT_PROJ_DIR="${PROJECTS_DIR}/${CURRENT_PROJ}"

  # Ensure sites directory exists
  mkdir -p $PROJECTS_DIR
# TODO: Check the env file is working as this is just defined in site add...
# TODO: Check that fzf is installed and if not issue a warning that experince is better with it
# TODO: add site cd

}

print_usage()
{
  echo "butler version 0.1.0 - your friendly dev stack helper"
  echo " "
  echo "SYNOPSIS:"
  echo " "
  echo "$package COMMAND ..."
  echo " "
  echo -e "${Blue}Commands: "
  echo " "
  echo -e "${Yellow}System:"
  echo -e ""
  echo -e "${Green}install    ${Color_Off}Install butler"
  echo -e ""
  echo -e "${Yellow}Site Management:"
  echo -e ""
  echo -e "${Green}site add   ${Color_Off}Add a new site"
  echo -e "${Green}site cd   ${Color_Off}Change Dicretory to site"
  echo -e ""
  echo -e "${Yellow}docker-compose Commands"
  echo -e ""
  echo -e "${Green}up        ${Color_Off}Create and start container stack"
  echo -e "${Green}down      ${Color_Off}Stop container stack"
  echo -e "${Green}exec      ${Color_Off}Execute command on container"
  echo -e "${Green}run       ${Color_Off}Run a custom script"
}

setup

[ ! "$#" -gt 0 ] && print_usage && exit 1

function="$1"
shift

case $function in
    'install') . $DIR/bin/install "$@" ;;
    'site') . $DIR/bin/site "$@" ;;
    'up') . $DIR/bin/docker-compose up "$@" ;;
    'down') . $DIR/bin/docker-compose down "$@" ;;
    'exec') . $DIR/bin/docker-compose "exec php" "$CURRENT_PROJ" "$@" ;;
    'run') . $DIR/bin/run "$@" ;;
    *) print_usage ; exit 1;;
esac

