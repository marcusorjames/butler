#!/bin/bash
# site status subcommand

package="butler site link"

DIR="$DIR/bin"

print_usage() {
  echo "Link a site or all sites"
  echo " " echo "SYNOPSIS:"
  echo " "
  echo "$package NAME [OPTION]"
  echo " "
  echo "  -h, --help         print this help"
  echo "  -f, --fix          auto fix any broken links"
}

check_site_exists() {
  site_path="$SITES_DIR/$1"
  [ ! -d $site_path ] && echo -ne "${CError}Error:${Color_Off} Site ${CWarn}$1" \
   && echo -e " ${Color_Off}doesn't exist" && exit 1
}

check_project_exists() {
  project_path=$(find $PROJECTS_DIR -maxdepth 2 -name "$1" -and -type d)
  [ ! -d $project_path ] && echo -ne "${CError}Error:${Color_Off} Project ${CWarn}$1" \
   && echo -e " ${Color_Off}doesn't exist" && exit 1
}

check_app_exists() {
  app_path="$SITES_DIR/$1/app"
  [ -h $app_path ] && return 0
  return 1
}

check_app_is_valid() {
  app_path="$SITES_DIR/$1/app"
  [ -e $app_path ] && return 0
  return 1
}

main() {
  help=false
  fix=false
  site="$1"
  shift

  while [[ $# -gt 0 ]]; do
    case "$1" in
      -h | --help )   help=true; shift ;;
      -f | --fix )    fix=true; shift ;;
      -- ) shift; break ;;
      * ) break ;;
    esac
  done

  $help && print_usage && exit 0

  template_root="$DIR/../templates"

  [ -z $site ] && echo -e "${CWarn}All sites is not yet implemented" && exit 0

  check_site_exists $site
  check_project_exists $site

  echo -en "$site "
  if check_app_exists $site && check_app_is_valid $site; then
    echo -e "${CSuccess}OK (already linked)${Color_Off}"
  else
    fixed=false
    if check_app_exists $site && ! check_app_is_valid $site; then
      if $fix; then
        fixed=true
        rm $app_path
      else
        echo -e "${CError}ERROR (link exists but is broken)${Color_Off}" && return 1
      fi
    fi

    if ln -s $project_path $app_path; then
      if $fixed; then
        echo -e "${CWarn}FIXED"
      else
        echo -e "${CSuccess}OK"
      fi
    else
      echo -e "${CError}ERROR Failed to link site${Color_Off}"
    fi
  fi


}

main "$@"
